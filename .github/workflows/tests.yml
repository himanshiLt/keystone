name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  should_run_tests:
    name: Should run tests
    runs-on: ubuntu-latest
    outputs:
      shouldRunTests: ${{ env.SHOULD_RUN_TESTS }}
    steps:
      - uses: dorny/paths-filter@v2
        id: filter
        if: github.event_name == 'pull_request'
        with:
          filters: |
            shouldRunTests:
              - '!{{design-system}/**,**/*.md}'

      - run: echo "SHOULD_RUN_TESTS=$SHOULD_RUN" >> $GITHUB_ENV
        if: github.event_name == 'pull_request'
        env:
          SHOULD_RUN: ${{ steps.filter.outputs.shouldRunTests }}

      - run: echo "SHOULD_RUN_TESTS=true" >> $GITHUB_ENV
        if: github.event_name != 'pull_request'

  unit_tests:
    name: Package Unit Tests
    needs: should_run_tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js LTS
        uses: actions/setup-node@main
        with:
          node-version: lts/*

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-yarn-v5-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v5-

      - name: Install Dependencies
        run: yarn

      - name: Unit tests
        run: yarn jest --ci --runInBand --testPathIgnorePatterns=admin-ui-tests --testPathIgnorePatterns=api-tests --testPathIgnorePatterns=examples-smoke-tests --testPathIgnorePatterns=examples/testing
        env:
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_KEY: ${{ secrets.CLOUDINARY_KEY }}
          CLOUDINARY_SECRET: ${{ secrets.CLOUDINARY_SECRET }}

  admin_ui_integration_tests:
    name: Integration tests for Admin UI
    runs-on: ubuntu-latest
    needs: should_run_tests
    env:
      DATABASE_URL: 'file:./test.db'
    strategy:
      fail-fast: false
    steps:
      - name: Checkout Repo
        if: needs.should_run_tests.outputs.shouldRunTests == 'true'
        uses: actions/checkout@v3

      - name: Setup Node.js LTS
        if: needs.should_run_tests.outputs.shouldRunTests == 'true'
        uses: actions/setup-node@main
        with:
          node-version: lts/*

      - name: Get yarn cache directory path
        if: needs.should_run_tests.outputs.shouldRunTests == 'true'
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        if: needs.should_run_tests.outputs.shouldRunTests == 'true'
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            node_modules
          key: ${{ runner.os }}-yarn-v5-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v5-

      - name: Install Dependencies
        if: needs.should_run_tests.outputs.shouldRunTests == 'true'
        run: yarn

      - name: Install Dependencies of Browsers
        if: needs.should_run_tests.outputs.shouldRunTests == 'true'
        uses: microsoft/playwright-github-action@v1

      - name: Install Browsers for Playwright
        if: needs.should_run_tests.outputs.shouldRunTests == 'true'
        run: node ./node_modules/playwright/install.js

      - name: Unit tests
        if: needs.should_run_tests.outputs.shouldRunTests == 'true'
        run: yarn jest --ci --runInBand tests/admin-ui-tests/*.test.ts
